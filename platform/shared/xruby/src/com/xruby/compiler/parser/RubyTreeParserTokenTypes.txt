// $ANTLR 2.7.6 (2005-12-22): src/com/xruby/compiler/parser/ruby.tree.g -> RubyTreeParserTokenTypes.txt$
RubyTreeParser    // output token vocab name
RPAREN_IN_METHOD_DEFINATION=4
BODY=5
CALL=6
ARG=7
COMPSTMT=8
SYMBOL=9
BLOCK=10
MULTIPLE_ASSIGN=11
MULTIPLE_ASSIGN_WITH_EXTRA_COMMA=12
BLOCK_ARG=13
BLOCK_ARG_WITH_EXTRA_COMMA=14
MRHS=15
NESTED_LHS=16
SINGLETON_METHOD=17
STRING=18
SEMI=19
LINE_BREAK=20
IF_MODIFIER=21
UNLESS_MODIFIER=22
WHILE_MODIFIER=23
UNTIL_MODIFIER=24
RESCUE_MODIFIER=25
LCURLY_BLOCK=26
RCURLY=27
COMMA=28
REST_ARG_PREFIX=29
ASSIGN=30
ASSIGN_WITH_NO_LEADING_SPACE=31
LPAREN_WITH_NO_LEADING_SPACE=32
LPAREN=33
RPAREN=34
IDENTIFIER=35
CONSTANT=36
FUNCTION=37
LITERAL_undef="undef"=38
LITERAL_alias="alias"=39
GLOBAL_VARIABLE=40
LITERAL_do="do"=41
LITERAL_end="end"=42
BOR=43
LOGICAL_OR=44
COLON_WITH_NO_FOLLOWING_SPACE=45
INSTANCE_VARIABLE=46
CLASS_VARIABLE=47
UNARY_PLUS_MINUS_METHOD_NAME=48
LITERAL_and="and"=49
LITERAL_or="or"=50
LITERAL_not="not"=51
QUESTION=52
COLON=53
PLUS_ASSIGN=54
MINUS_ASSIGN=55
STAR_ASSIGN=56
DIV_ASSIGN=57
MOD_ASSIGN=58
POWER_ASSIGN=59
BAND_ASSIGN=60
BXOR_ASSIGN=61
BOR_ASSIGN=62
LEFT_SHIFT_ASSIGN=63
RIGHT_SHIFT_ASSIGN=64
LOGICAL_AND_ASSIGN=65
LOGICAL_OR_ASSIGN=66
INCLUSIVE_RANGE=67
EXCLUSIVE_RANGE=68
LOGICAL_AND=69
COMPARE=70
EQUAL=71
CASE_EQUAL=72
NOT_EQUAL=73
MATCH=74
NOT_MATCH=75
LESS_THAN=76
GREATER_THAN=77
LESS_OR_EQUAL=78
GREATER_OR_EQUAL=79
BXOR=80
BAND=81
LEFT_SHIFT=82
RIGHT_SHIFT=83
PLUS=84
MINUS=85
STAR=86
DIV=87
MOD=88
POWER=89
BNOT=90
NOT=91
LITERAL_return="return"=92
LITERAL_break="break"=93
LITERAL_next="next"=94
DOT=95
COLON2=96
LBRACK_ARRAY_ACCESS=97
RBRACK=98
EMPTY_ARRAY_ACCESS=99
UNARY_PLUS=100
UNARY_MINUS=101
ASSOC=102
BLOCK_ARG_PREFIX=103
LITERAL_nil="nil"=104
LITERAL_true="true"=105
LITERAL_false="false"=106
LITERAL___FILE__="__FILE__"=107
LITERAL___LINE__="__LINE__"=108
DOUBLE_QUOTE_STRING=109
SINGLE_QUOTE_STRING=110
STRING_BEFORE_EXPRESSION_SUBSTITUTION=111
STRING_BETWEEN_EXPRESSION_SUBSTITUTION=112
STRING_AFTER_EXPRESSION_SUBSTITUTION=113
REGEX=114
REGEX_BEFORE_EXPRESSION_SUBSTITUTION=115
COMMAND_OUTPUT=116
COMMAND_OUTPUT_BEFORE_EXPRESSION_SUBSTITUTION=117
HERE_DOC_BEGIN=118
HERE_DOC_CONTENT=119
HERE_DOC_BEFORE_EXPRESSION_SUBSTITUTION=120
HERE_DOC_BETWEEN_EXPRESSION_SUBSTITUTION=121
HERE_DOC_AFTER_EXPRESSION_SUBSTITUTION=122
W_ARRAY=123
INTEGER=124
HEX=125
BINARY=126
OCTAL=127
FLOAT=128
ASCII_VALUE=129
LITERAL_self="self"=130
LITERAL_super="super"=131
LEADING_COLON2=132
LITERAL_retry="retry"=133
LITERAL_yield="yield"=134
LITERAL_redo="redo"=135
EMPTY_ARRAY=136
LBRACK=137
LCURLY_HASH=138
LITERAL_rescue="rescue"=139
LITERAL_else="else"=140
LITERAL_ensure="ensure"=141
LITERAL_begin="begin"=142
LITERAL_if="if"=143
LITERAL_elsif="elsif"=144
LITERAL_unless="unless"=145
LITERAL_case="case"=146
LITERAL_for="for"=147
LITERAL_in="in"=148
LITERAL_while="while"=149
LITERAL_until="until"=150
LITERAL_module="module"=151
LITERAL_class="class"=152
LITERAL_def="def"=153
SINGLE_QUOTE=154
"defined?"=155
LITERAL_BEGIN="BEGIN"=156
LITERAL_then="then"=157
LITERAL_when="when"=158
LITERAL_END="END"=159
DO_IN_CONDITION=160
PURE_LINE_BREAK=161
LINE_FEED=162
REGEX_MODIFIER=163
SPECIAL_STRING=164
STRING_CHAR=165
ANYTHING_OTHER_THAN_LINE_FEED_AND_POUND=166
HERE_DOC_DELIMITER=167
RDOC=168
ANYTHING_OTHER_THAN_LINE_FEED=169
LINE=170
ESC=171
IDENTIFIER_CONSTANT_AND_KEYWORD=172
UNDER_SCORE=173
FLOAT_WITH_LEADING_DOT=174
NON_ZERO_DECIMAL=175
OCTAL_CONTENT=176
HEX_CONTENT=177
BINARY_CONTENT=178
EXPONENT=179
COMMENT=180
WHITE_SPACE_CHAR=181
WHITE_SPACE=182
LINE_CONTINUATION=183
END_OF_FILE=184
